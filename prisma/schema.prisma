// This is your Prisma schema file,// learn more about it in the docs: https://pris.ly/d/prisma-schemagenerator 

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Fornecedor {
  id                       Int                        @id @default(autoincrement())
  nomeFantasia             String
  fornecedorCNPJ           String                     @unique
  razaoSocial              String
  Endereco                 String
  TransportadoraPropria    Boolean
  FornecedorProduto        FornecedorProduto[]
  Entrega                  Entrega[]
  TransportadoraFornecedor TransportadoraFornecedor[]

  @@map("fornecedores")
}

model Transportadora {
  id                       Int                        @id @default(autoincrement())
  nomeFantasia             String
  fornecedorCNPJ           String                     @unique
  razaoSocial              String
  Endereco                 String
  Entrega                  Entrega[]
  TransportadoraFornecedor TransportadoraFornecedor[]

  @@map("transportadoras")
}

model TransportadoraFornecedor {
  id Int @id @default(autoincrement())

  Fornecedor       Fornecedor?     @relation(fields: [fornecedorId], references: [id])
  fornecedorId     Int?
  Transportadora   Transportadora? @relation(fields: [transportadoraId], references: [id])
  transportadoraId Int?

  @@map("transportadorasFornecedores")
}

model TesteQualidade {
  id                Int                  @id @default(autoincrement())
  nomeTeste         String
  QualidadeProduto  QualidadeProduto[]
  EntregaDesprovada EntregaDesparovada[]

  @@map("testesQualidades")
}

model Produto {
  id                Int                 @id @default(autoincrement())
  nomeProduto       String
  FornecedorProduto FornecedorProduto[]
  EntregaProduto    EntregaProduto[]
  QualidadeProduto  QualidadeProduto[]

  @@map("produtos")
}

model QualidadeProduto {
  obrigatorio      Boolean        @default(true)
  TesteQualidade   TesteQualidade @relation(fields: [testeQualdidaeId], references: [id])
  testeQualdidaeId Int
  Produto          Produto        @relation(fields: [produtoId], references: [id])
  produtoId        Int

  @@id([testeQualdidaeId, produtoId])
  @@map("qualidadeProdutos")
}

model FornecedorProduto {
  Fornecedor   Fornecedor @relation(fields: [fornecedorId], references: [id])
  fornecedorId Int
  Produto      Produto    @relation(fields: [produtoId], references: [id])
  produtoId    Int

  @@id([produtoId, fornecedorId])
  @@map("fornecedorProdutos")
}

model EtapaEntrega {
  id        Int       @id @default(autoincrement())
  nomeEtapa String
  Entrega   Entrega[]

  @@map("etapaEntrega")
}

model Entrega {
  id                 Int                  @id @default(autoincrement())
  nfe                String               @unique
  tipoEntrega        String
  Fornecedor         Fornecedor?          @relation(fields: [fornecedorId], references: [id])
  fornecedorId       Int?
  Transportadora     Transportadora?      @relation(fields: [tranportadoraId], references: [id])
  tranportadoraId    Int?
  EtapaEntrega       EtapaEntrega?        @relation(fields: [etapaEntregaId], references: [id])
  etapaEntregaId     Int?
  EntregaProduto     EntregaProduto[]
  StatusEntrega      StatusEntrega[]
  EntregaDesparovada EntregaDesparovada[]

  @@map("entregas")
}

model EntregaDesparovada {
  id               Int             @id @default(autoincrement())
  motivo           String
  TesteQualidade   TesteQualidade? @relation(fields: [testeQualidadeId], references: [id])
  testeQualidadeId Int?
  Entrega          Entrega         @relation(fields: [entregaId], references: [id])
  entregaId        Int

  @@map("entregasDesaprovadas")
}

model EntregaProduto {
  id           Int     @id @default(autoincrement())
  pesoPrevisto Float?
  pesoAtual    Float?
  unidade      String?
  quantidade   Int?
  Produto      Produto @relation(fields: [produtoId], references: [id])
  produtoId    Int
  Entrega      Entrega @relation(fields: [EntregaId], references: [id])
  EntregaId    Int

  @@map("entregaProdutos")
}

model TipoUsuario {
  id          Int       @id @default(autoincrement())
  tipoUsuario String
  Usuario     Usuario[]

  @@map("tiposUsuarios")
}

model Usuario {
  id             Int             @id @default(autoincrement())
  nome           String
  login          String
  senha          String
  cpf            String
  dataNascimento DateTime
  TipoUsuario    TipoUsuario?    @relation(fields: [tipoUsuarioId], references: [id])
  tipoUsuarioId  Int?
  StatusEntrega  StatusEntrega[]

  @@map("usuarios")
}

model StatusEntrega {
  id        Int      @id @default(autoincrement())
  approved  Boolean
  Entrega   Entrega  @relation(fields: [entregaId], references: [id])
  entregaId Int
  Usuario   Usuario? @relation(fields: [usuarioId], references: [id])
  usuarioId Int?

  @@map("statusEntregas")
}
